/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Copyright(C) Chris2018998,All rights reserved.
 *
 * Project owner contact:Chris2018998@tom.com.
 *
 * Project Licensed under GNU Lesser General Public License v2.1.
 */
package org.stone.beetp;

import java.util.concurrent.atomic.AtomicInteger;

/**
 * Task manager config
 *
 * @author Chris Liao
 * @version 1.0
 */
public class BeeTaskManagerConfig {
    //poolName index
    private static final AtomicInteger PoolNameIndex = new AtomicInteger(1);

    //pool name,if not set,auto generated by<code>BeeTaskManagerConfig.PoolNameIndex</code>
    private String poolName;

    private int maxQueueTaskSize;

    private int rejectPolicyCode;

    private int maxWorkerSize;

    private boolean workerInDaemon;

    private String interceptorClassName;

    private BeeTaskInterceptor interceptor;

    public String getPoolName() {
        return poolName;
    }

    public void setPoolName(String poolName) {
        this.poolName = poolName;
    }

    public int getMaxQueueTaskSize() {
        return maxQueueTaskSize;
    }

    public void setMaxQueueTaskSize(int maxQueueTaskSize) {
        this.maxQueueTaskSize = maxQueueTaskSize;
    }

    public int getRejectPolicyCode() {
        return rejectPolicyCode;
    }

    public void setRejectPolicyCode(int rejectPolicyCode) {
        this.rejectPolicyCode = rejectPolicyCode;
    }

    public int getMaxWorkerSize() {
        return maxWorkerSize;
    }

    public void setMaxWorkerSize(int maxWorkerSize) {
        this.maxWorkerSize = maxWorkerSize;
    }

    public boolean isWorkerInDaemon() {
        return workerInDaemon;
    }

    public void setWorkerInDaemon(boolean workerInDaemon) {
        this.workerInDaemon = workerInDaemon;
    }

    public BeeTaskInterceptor getInterceptor() {
        return interceptor;
    }

    public void setInterceptor(BeeTaskInterceptor interceptor) {
        this.interceptor = interceptor;
    }

    public String getInterceptorClassName() {
        return interceptorClassName;
    }

    public void setInterceptorClassName(String interceptorClassName) {
        this.interceptorClassName = interceptorClassName;
    }
}

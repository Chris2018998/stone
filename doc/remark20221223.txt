A: 将JDK 并发部分与Shine包做一个形象化对比，一个像大平层，一个像别墅

B: Shine的核心驱动思想是等待-唤醒池，层次结构大致有如下几层
1：节点+节点链
2：基础等待池
3：场景等待池（衍生为何而等待）
4：资源等待池（从结果等待池延伸）
5：锁，信号量，同步队列，Transfer队列。。。。
6：第5层的应用
7：应用层（开发端）

进展情况：
1： 同步器框架基本完成
2： 已开发重入锁和读写锁
3： 已开并发包中的5个功能点类（排除两个并发队列）
4： 线程池正在开发中


优点：
1： 以统一化思想驱动等待-唤醒类型并发功能点，达到了 节点链，CAS操作与并发业务解耦以及瘦身的效果
2： 具有一定的延展性（业务场景等待池目前只有4个应用池+结果验证器+1个资源池）
3： 代码量偏少，重用性高，架构层次结构简单，便于学习和维护，降低了并发业务点（等待/唤醒类）的开发难度

缺点：
1： 性能方面会低于JDK的实现，比如锁的微性能差距测试大约低5-6倍（别墅楼上楼下跑相对大平层内部跑，是要费力一些)。

期待包内的并发节点链性能方面在未来有所提高，从而缩短差距。


对于shine一词的解释： 秋晨，阳光穿透树叶间隙，映入溪水，清风徐来，树枝摇曳，溪水波动，从而产生闪耀之光，寓意祥和温暖